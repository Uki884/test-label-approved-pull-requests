name: Release Drafter

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Generate CalVer version
        id: calver
        run: |
          export VERSION=prod-$(TZ=Asia/Tokyo date +%Y%m%d-%H%M)
          echo "::set-output name=tag_name::$VERSION"
      - uses: release-drafter/release-drafter@v5
        with:
          name: ${{ steps.calver.outputs.tag_name }}
          tag: ${{ steps.calver.outputs.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Github context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: get Latest release
        run: |
          echo 'RELEASE_BODY<<EOF' >> $GITHUB_ENV
          echo "$(curl -H 'Accept: application/vnd.github+json' -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .body | sed 's,",\\",g' | sed "s,',,g") >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: notify to Slack
        id: slack
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          text: A release is published.
          blocks: |
            [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "${{ github.event.release.tag_name}} is published!"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Author:*\n${{ github.actor }}"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Information:*"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ${{ toJSON(github.event.release.body) }}
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "${{ github.event.release.html_url }}"
                }
              }
            ]